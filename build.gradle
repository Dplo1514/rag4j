plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'jacoco'
}

group = 'com.rag'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:3.4.0"
    }
}

dependencies {
    // spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // db
    runtimeOnly 'com.mysql:mysql-connector-j'

    // object storage
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.765'

    // file storage
    implementation 'com.google.api-client:google-api-client:1.34.1'
    implementation 'com.google.api-client:google-api-client-jackson2:1.34.1'
    implementation 'com.google.apis:google-api-services-drive:v3-rev20230815-2.0.0'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.34.1'

    // pdf box
    implementation 'org.apache.pdfbox:pdfbox:2.0.29'

    // mongodb
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'

    // event queue
    implementation 'org.springframework.kafka:spring-kafka'


    // test
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // tokenizer
    implementation 'com.knuddels:jtokkit:1.1.0'
}

jacoco {
    toolVersion = "0.8.11"
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.80
            }
            excludes = [
                    '*.Q*',
                    '*.StockscopeApplication',
                    '*.config.*',
                    '*.exception.*'
            ]
        }
    }
}

test {
    useJUnitPlatform()
    outputs.dir snippetsDir
    finalizedBy 'jacocoTestReport'
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    baseDirFollowsSourceFile()
    dependsOn test
}

tasks.register('copyApiDocument', Copy) {
    dependsOn asciidoctor
    doFirst {
        delete file('src/main/resources/static/docs')
    }

    from asciidoctor.outputDir
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyApiDocument
}
